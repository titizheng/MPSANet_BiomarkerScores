import os
import sys
import logging
import argparse

import numpy as np
import openslide
import cv2
import json

'''Step 2: Convert the JSON file to an npy file, mask'''

sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/../../')

parser = argparse.ArgumentParser(description='Get tumor mask of tumor-WSI and '
                                             'save it in npy format')

parser.add_argument('--level', default=0, type=int, help='at which WSI level'
                    ' to obtain the mask, default 6')


def run(args, slide_path, json_path, output_tumor_path,type=None):

    # get the level * dimensions e.g. tumor0.tif level 6 shape (1589, 7514)
    slide = openslide.OpenSlide(slide_path) #
    w, h = slide.level_dimensions[args.level]#
    mask_tumor = np.zeros((h, w)) # the init mask, and all the value is 0

    # get the factor of level * e.g. level 6 is 2^6
    factor = slide.level_downsamples[args.level]


    with open(json_path) as f:
        dicts = json.load(f)
    #####-------------------------------------------------------------------------------

    if type == 'pos': #pos indicates the tissue corresponding to the obtained positive region
        tumor_polygons = dicts['positive']
    else:
        tumor_polygons = dicts['negative'] ##

    for tumor_polygon in tumor_polygons:
        # plot a polygon
        name = tumor_polygon["name"]

        vertices = np.array(tumor_polygon["vertices"]) / factor
        vertices = vertices.astype(np.int32)

        cv2.fillPoly(mask_tumor, [vertices], (255)) ##

    mask_tumor = mask_tumor[:] > 127
    mask_tumor = np.transpose(mask_tumor)

    np.save(output_tumor_path, mask_tumor)  ###Gets the mask file of the organization, and the npy file is the last one to be stored

def main(slide_path, json_path, output_tumor_path,type=None):
    logging.basicConfig(level=logging.INFO)

    args = parser.parse_args()
    run(args, slide_path, json_path, output_tumor_path,type)

if __name__ == "__main__":
    # print(1)
    slide_path_root ="/home/omnisky/hdd_15T_sdc/zttdata/TCGA/TCGAHEHER2/1slide/Her2Neg" #slide
    json_path_root ="/home/omnisky/hdd_15T_sdc/zttdata/TCGA/TCGAHEHER2/3json/Her2Neg"  #json npy file generated by xml file
    tumor_mask_path_root ="/home/omnisky/hdd_15T_sdc/zttdata/TCGA/TCGAHEHER2/4masknpy/level0/Her2Neg" #Storing mask files generated from json files

    for slide_name in os.listdir(slide_path_root):
        slide_path = os.path.join(slide_path_root, slide_name)
        print("1.slide pathes: {}".format(slide_path))
        (file_name, extension) = os.path.splitext(slide_name)
        json_path = os.path.join(json_path_root, file_name + ".json")
        print("2.json filses pathes: {}".format(json_path))
        output_tumor_path = os.path.join(tumor_mask_path_root, file_name + ".npy")
        main(slide_path, json_path, output_tumor_path,type='pos1')
        print("3.tumor_mask files save pathesï¼š{}".format(output_tumor_path))




